{"title":"dashboard_alpha","markdown":{"yaml":{"title":"dashboard_alpha","format":"dashboard","logo":"images/skype_icon.png","editor_options":{"chunk_output_type":"console"}},"headingText":"theme_set(theme_minimal(base_size = 24, base_family = \"Atkinson Hyperlegible\"))","containsRefs":false,"markdown":"\n\n```{r}\n#| label: load-packages\n#| message: false\n\nlibrary(tidyverse)\nlibrary(ggtext)\nlibrary(readxl)\nlibrary(scales)\nlibrary(DT)\nlibrary(gt)\nlibrary(gtExtras)\nlibrary(glue)\nlibrary(plotly)\nlibrary(calendR)\nlibrary(cellranger)\nlibrary(airportr)\nlibrary(leaflet)\nlibrary(sf)\n```\n\n```{r}\n#| label: load-and-prep-roster\n#| message: false\n\nroster_file <- dir(path = \"~/OneDrive - NJASAP/Documents/Contact List UnionWare Aptify\",\n                     full.names = T,\n                     pattern = \"ACTIVE.*\\\\.xlsx$\")\n\nroster <- read_excel(roster_file,\n                     sheet = \"Sheet1\",\n                     range = cell_cols(1:25)\n                     )\n\npull_date <- ymd(\"2024-05-27\")\n\nclean_roster <- roster %>%\n  rename_with(~tolower(gsub(\" \",\"_\", .x))) %>% \n  rename(employee_no = `employee_#`,\n         cmi = crew_member_id) %>% \n  mutate(hire_date = ymd(hire_date),\n         end_date = ymd(end_date),\n         birthday = ymd(birthday),\n         full_name = as.character(glue(\"{last_name}, {first_name}\")),\n         yos = ceiling(as.duration(hire_date %--% today()) / dyears(1)),\n         age = ceiling(as.duration(birthday %--% today()) / dyears(1)),\n         hire_ym = as.character(glue(\"{year(hire_date)}-{str_pad(month(hire_date),2,pad = '0')}\")),\n         end_ym = ifelse(is.na(end_date),NA,\n                          as.character(glue(\"{year(end_date)}-{str_pad(month(end_date),2,pad = '0')}\"))\n                          ),\n         end_year_yy = str_sub(end_ym, start = -5, end = -4),\n         hire_year_yy = str_sub(hire_ym, start = -5, end = -4),\n         pull_date = pull_date\n        )\n\n ### Required Dates ###\n\nroster_max_pull_floor <- floor_date(max(clean_roster$pull_date, na.rm = T), months(1))\n\nroster_12m_lb <- add_with_rollback(roster_max_pull_floor,\n                                   months(-11))\n\n### LIST OF MONTHS ###\n\nrun_total_months <- clean_roster %>% \n  select(hire_date) %>% \n  mutate(hire_floor = floor_date(hire_date, months(1))) %>% \n  select(hire_floor) %>% \n  filter(hire_floor >= roster_12m_lb) %>% \n  unique()\n\nrun_total_months <- as.list(run_total_months$hire_floor)\n\n### Total Pilots at Month ####\n\nfmonth_total <- function(x){\n\n  run_total <- clean_roster %>% \n    select(hire_date, end_date) %>% \n    mutate(month_run = as.character(x)) %>% \n    filter(hire_date < x & !is.na(hire_date)) %>% \n    filter(end_date >= x | is.na(end_date)) %>% \n    count(month_run)\n\n  return(run_total)\n}\n\n# fmonth_total(run_total_months[12])\n\n# as_date(19844)\n\n### Bind Total by Month ###\n\nmonthly_total <- map_dfr(.x = run_total_months, .f = fmonth_total)\n\nmonthly_total <- monthly_total %>% \n  mutate(month_run = ymd(month_run),\n         year_month = as.character(glue(\"{year(month_run)}-{str_pad(month(month_run),2, pad = 0)}\"))\n         )\n\n# glimpse(monthly_total)\n\n### Hire & Attrition Multi-Plot\n\nt_end_ym <- clean_roster %>%\n  select(cmi, full_name, hire_date, hire_ym, end_date, end_ym) %>% \n  filter(end_date >= roster_12m_lb ,!is.na(end_date)) %>% \n  count(end_ym, name = \"end_count\")\n\nt_hire_ym <- clean_roster %>%\n  select(cmi, full_name, hire_date, hire_ym, end_date, end_ym) %>% \n  filter(hire_date >= roster_12m_lb ,!is.na(hire_date)) %>% \n  count(hire_ym, name = \"hire_count\")\n\n# join_roster_hire_attrit #\n\njoin_hire_attrit <- t_hire_ym %>% \n  left_join(t_end_ym, by = join_by(hire_ym == end_ym))\n\n```\n\n```{r}\n#| label: load-and-prep-seniority\n#| message: false\n\nimported_folder_2023 <- dir(path = \"~/OneDrive - NJASAP/Documents/Seniority Related/Seniority List - Union/2023\", \n                            full.names = T,\n                            pattern = \"\\\\d\\\\d\\\\d[34]-\\\\d\\\\d\\\\sSeniorityList_UnionCopy.xlsx\"\n                            )\n\nimported_folder_2024 <- dir(path = \"~/OneDrive - NJASAP/Documents/Seniority Related/Seniority List - Union/2024\", \n                            full.names = T,\n                            pattern = \"\\\\d\\\\d\\\\d[34]-\\\\d\\\\d\\\\sSeniorityList_UnionCopy.xlsx\"\n                            )\n\nimported_master_snrty_folder <- c(imported_folder_2023, imported_folder_2024)\n\nrm(imported_folder_2023)\nrm(imported_folder_2024)\n\n### Create Function to build list of files ###\n\nread_snrty_files <- function(file){\n  if(is.na(file)) stop(\"no file path\")\n  imported_snrty <- read_excel(file,\n                               sheet = \"UNION_EXCEL_FILE\",\n                               range = cell_cols(\"A:P\")\n  )\n  imported_snrty\n}\n\n### Bind files by folder ###\n\nmerged_seniority <- map_dfr(.x = imported_master_snrty_folder, .f = read_snrty_files)\n\nrm(imported_master_snrty_folder)\n\nseniority <- merged_seniority %>% \n  rename_all(tolower) %>% \n  select(cmi, co_snrty = `company seniority`, snrty = `union seniority`, 4:7,\n         equip_lock = `equip lock`, 9:12, tsp_elect = `tsp election`,\n         year_month = `year month`, published) %>% \n  mutate(doh = ymd(doh), equip_lock = ymd(equip_lock), published = ymd(published),\n         yos_r = ceiling( as.duration(doh %--% published) / dyears(1) )\n         )\n\n### Date Variables ###\n\nmax_pub_floor <- floor_date(max(seniority$published), unit = \"months\")\n\nrm(merged_seniority)\n\n```\n\n```{r duty_summary}\n#| title: \"Duty Summary\"\n#| results: hide\n\n### Import and merge DSR lists ###\n\nimp_folder_dsr <- dir(\"~/OneDrive - NJASAP/Documents/Duty Status Reports DSR/Power Query Method TEST/DSR Montly RAW\",\n                             full.names = T,\n                             pattern = \"\\\\d\\\\d\\\\d[34]-\\\\d+\\\\sPilot Duty Summary.*\\\\.xlsx\")\n\n### Create Function to build list of files ###\n\nread_dsr_files <- function(file){\n  if(is.na(file)) stop(\"no file path\")\n  imported_dsr <- read_excel(file,\n                               sheet = \"Pilot Duty Report\",\n                               range = cell_cols(1:13)\n  )\n  imported_dsr\n}\n\n### Bind files by folder ###\n\nmerged_dsr <- map_dfr(.x = imp_folder_dsr, .f = read_dsr_files)\n\n### DSR Clean-up ###\n\nclean_merged_dsr <- merged_dsr %>% \n  rename_all(tolower) %>% \n  select(1:2, sen_status = `sen status`, 4:6, schedule = `sched type`, duty_code = `duty code`,\n         rest, duty_time = `duty time`, end_loc = `end loc`, icao_reg = `icao region`, country) %>% \n  mutate(date = ymd(date),\n         rest = ifelse(rest == \"24+\", \"25\", rest),\n         rest = as.numeric(rest),\n         duty_code = ifelse(duty_code == \"*\", \"EXT\", duty_code),\n         duty_prime = ifelse(duty_code == \"EXT\",\n                             duty_code,\n                             str_sub(duty_code,1,1)),\n         year = year(date),\n         month = str_pad(month(date),2,pad = \"0\"),\n         year_month = glue(\"{year}-{month}\")\n  )\n\n### Required Dates ###\n\ndsr_12m_lbk <- add_with_rollback(floor_date(max(clean_merged_dsr$date), months(1)),\n                                 months(-11),\n                                 roll_to_first = TRUE)\ndsr_min_month <- str_pad(month(dsr_12m_lbk),2, pad = \"0\")\ndsr_min_year <- year(dsr_12m_lbk)\ndsr_max_month <- str_pad(month(max(clean_merged_dsr$date)),2,pad = \"0\")\ndsr_max_year <- year(max(clean_merged_dsr$date))\ndsr_ytd_jan <- floor_date(max(clean_merged_dsr$date), years(1))\n\n### Table Prep -- Seniority List ###\n\n### Filtered for latest seniority list ###\n\nlatest_snrty_list <- seniority %>% \n  filter( published > max_pub_floor)\n\n##############################\n### DSR Prep for 12-Months ###\n##############################\n\npivot_duty_prime <- clean_merged_dsr %>% \n  select(cmi, date, duty_prime) %>% \n  filter(date >= dsr_12m_lbk) %>% \n  count(cmi, duty_prime) %>%\n  # count() %>% \n  pivot_wider(names_from = duty_prime, values_from = n) %>% \n  mutate(ttl_ext_days = case_when(is.na(EXT) & is.na(R) ~ EXT,\n                                  !is.na(EXT) & is.na(R) ~ EXT,\n                                  is.na(EXT) & !is.na(R) ~ R,\n                                  TRUE ~ EXT + R)\n         )%>% \n  select(cmi, EXT, R, ttl_ext_days, X)\n\npivot_duty_code <- clean_merged_dsr %>% \n  select(cmi, date, duty_code) %>% \n  filter(date >= dsr_12m_lbk) %>% \n  group_by(cmi, duty_code) %>%\n  count() %>% \n  pivot_wider(names_from = duty_code, values_from = n) %>% \n  select(cmi, X2)\n  \n### Join Duty Code and Duty Prime ###\n\njoin_duty_code <- pivot_duty_code %>% \n  left_join(pivot_duty_prime, by = \"cmi\") %>% \n  select(cmi, EXT, R, ttl_ext_days, X, X2) # Codes to display\n\n### Join Latest DSR and Seniority ###\n\njoin_latest_dsr_snrty <- latest_snrty_list %>% \n  left_join(join_duty_code, by = \"cmi\")\n\nrm(pivot_duty_code)\nrm(pivot_duty_prime)\nrm(join_duty_code)\n\n### Extended Day 79 Pockets Table 12-Months ###\n\ntable_79p_join_dsr <- join_latest_dsr_snrty %>%\n  mutate(sdp = ifelse(is.na(sdp), \"\", glue(\"({sdp})\")),\n         name_sdp = as.character(glue(\"{name} {sdp}\")),\n       #  name_sdp = as.character(name_sdp)\n         ) %>% \n  select(name_sdp, snrty, aircraft, schedule, seat, EXT, R, ttl_ext_days, X2, X) %>% \n  arrange(snrty)\n\n### Replace NA with 0 ###\n\ntable_79p_join_dsr[6:10][is.na(table_79p_join_dsr[6:10])] <- 0\n\n#########################################\n### Extended Day 79 Pockets Table YTD ###\n#########################################\n\n### DSR Prep for  YTD ###\n\npivot_ytd_duty_prime <- clean_merged_dsr %>%\n  select(cmi, date, duty_prime) %>%\n  filter(date >= dsr_ytd_jan) %>%\n  group_by(cmi, duty_prime) %>%\n  count() %>%\n  pivot_wider(names_from = duty_prime, values_from = n) %>%\n   mutate(ttl_ext_days = case_when(is.na(EXT) & is.na(R) ~ EXT,\n                                  !is.na(EXT) & is.na(R) ~ EXT,\n                                  is.na(EXT) & !is.na(R) ~ R,\n                                  TRUE ~ EXT + R)\n         )%>% \n  select(cmi, EXT, R, ttl_ext_days, X)\n\npivot_ytd_duty_code <- clean_merged_dsr %>%\n  select(cmi, date, duty_code) %>%\n  filter(date >= dsr_ytd_jan) %>%\n  group_by(cmi, duty_code) %>%\n  count() %>%\n  pivot_wider(names_from = duty_code, values_from = n) %>%\n  select(cmi, X2)\n\n### Join Duty Code and Duty Prime ###\n\njoin_ytd_duty_code <- pivot_ytd_duty_code %>%\n  left_join(pivot_ytd_duty_prime, by = \"cmi\") %>%\n  select(cmi, EXT, R, ttl_ext_days, X, X2) # Codes to display\n\n### Join Latest DSR and Seniority ###\n\njoin_latest_ytd_dsr_snrty <- latest_snrty_list %>%\n  left_join(join_ytd_duty_code, by = \"cmi\")\n\n### Resource Cleanup ###\n\nrm(latest_snrty_list)\nrm(pivot_ytd_duty_code)\nrm(pivot_ytd_duty_prime)\nrm(join_ytd_duty_code)\n\ntable_79p_join_ytd_dsr <- join_latest_ytd_dsr_snrty %>%\n  mutate(sdp = ifelse(is.na(sdp), \"\", glue(\"({sdp})\")),\n         name_sdp = as.character(glue(\"{name} {sdp}\")),\n       #  name_sdp = as.character(name_sdp)\n         ) %>%\n  select(name_sdp, snrty, aircraft, schedule, seat, EXT, R, ttl_ext_days, X2, X) %>% \n  arrange(snrty)\n\n### Replace NA with 0 ###\n\ntable_79p_join_ytd_dsr[6:10][is.na(table_79p_join_ytd_dsr[6:10])] <- 0\n   \n\n```\n\n# Home\n\n```{r}\n#| label: all-values\n#| results: hide\n\nn_pilots <- clean_roster %>% \n  filter(job_status != \"Attritted\" & job_status != \"Transfered\") %>% \n  nrow()\n\np_pic <- clean_roster %>% \n  filter(job_status != \"Attritted\" & job_status != \"Transfered\") %>% \n  count(seat) %>% \n  mutate(p = n / sum(n)) %>% \n  filter(seat == \"Pilot In Command\") %>% \n  pull(p)\n\np_sic <- clean_roster %>% \n  filter(job_status != \"Attritted\" & job_status != \"Transfered\") %>% \n  count(seat) %>% \n  mutate(p = n / sum(n)) %>% \n  filter(seat == \"Second In Command\") %>% \n  pull(p)\n```\n\n## Row {height=10%}\n\n```{r}\n#| content: valuebox\n#| title: \"Total Pilots\"\n\nlist(\n  icon = \"globe\",\n  color = \"primary\",\n  value = n_pilots\n)\n```\n\n```{r}\n#| content: valuebox\n#| title: \"Percent PIC\"\n\nlist(\n  icon = \"person-lines-fill\",\n  color = \"secondary\",\n  value = label_percent(accuracy = 0.1)(p_pic)\n)\n```\n\n```{r}\n#| content: valuebox\n#| title: \"Percent SIC\"\n\nlist(\n  icon = \"person-lines-fill\",\n  color = \"primary\",\n  value = label_percent(accuracy = 0.1)(p_sic)\n)\n```\n\n## Row {height=30%}\n\n```{r}\n#| title: \"Total Pilots\"\n\n\ntotal_pilots <- monthly_total %>% \n  ggplot(aes(x = month_run,\n             y = n,\n             text = glue(\"Year Month: {year_month}\\nTotal Pilots: {n}\")\n             )\n         ) +\n  geom_line(aes(group = \"year_month\"))+\n  geom_point(size = 3, color = \"#3b8ede\", alpha = 0.7)+\n  # geom_point(size = 6, shape = \"circle open\")+\n  theme_bw()+\n  labs(x = NULL,\n       y = \"Count\")+\n  theme(plot.subtitle = element_markdown(),\n        axis.text.x = element_text(angle = 45, hjust = 1)\n        )\n\nggplotly(total_pilots, tooltip = \"text\")\n```\n\n## Row {height=30%}\n\n```{r}\n#| title: \"New Hires\"\n\ntotal_hires <- join_hire_attrit %>% \n  rename(year_month = hire_ym) %>% \n  mutate(net_gain = hire_count-end_count) %>% \n  ggplot(aes(text = glue(\"Year Month: {year_month}\\nPilots Hired: {hire_count}\")))+\n  geom_line(aes(x = year_month, y = hire_count), group = \"hire_count\")+\n  geom_point(aes(x = year_month, y = hire_count), size = 3, color = \"steelblue\", alpha = 0.8)+\n  # geom_text(aes(x = year_month, y = hire_count,\n  #               label = hire_count,\n  #               vjust = -1.5))+\n  # scale_y_continuous(limits = c(0,125), n.breaks = 6)+\n  theme_bw()+\n  labs(x = NULL,\n       y = \"Count\")+\n  # ggtitle(\"NJASAP HIRING\",\n  #         subtitle = glue(\"*Data current as of {year(roster_max_pull_floor)}-{str_pad(month(roster_max_pull_floor),2, pad = 0)} NJASAP Pilot Seniority List*\")\n  #           )+\n  theme(plot.subtitle = element_markdown(),\n        axis.text.x = element_text(angle = 45, hjust = 1)\n        )\n\nggplotly(total_hires, tooltip = \"text\")\n```\n\n# Attrition {scrolling=\"false\"}\n\n```{r}\n#| label: hire attrition values\n#| results: hide\n\nn_attrit <- clean_roster %>%\n  select(cmi, full_name, hire_date, hire_ym, end_date, end_ym) %>% \n  filter(end_date >= roster_12m_lb ,!is.na(end_date)) %>% \n  count() %>% \n  pull(n)\n\nn_hire <- clean_roster %>%\n  select(cmi, full_name, hire_date, hire_ym, end_date, end_ym) %>% \n  filter(hire_date >= roster_12m_lb ,!is.na(hire_date)) %>% \n  count() %>% \n  pull(n)\n\nnet_staff <- n_hire-n_attrit\n\n```\n\n## row {height=\"10%\"}\n\n```{r}\n#| content: valuebox\n#| title: \"Total Hires\"\n\nlist(\n  icon = \"globe\",\n  color = \"primary\",\n  value = n_hire\n)\n```\n\n```{r}\n#| content: valuebox\n#| title: \"Total Attrition\"\n\nlist(\n  icon = \"person-lines-fill\",\n  color = \"secondary\",\n  value = n_attrit\n)\n```\n\n```{r}\n#| content: valuebox\n#| title: \"Net Staffing\"\n\nlist(\n  icon = \"person-lines-fill\",\n  color = \"primary\",\n  value = net_staff\n)\n```\n\n## row {height=\"70%\"}\n\n```{r}\n\n# Hire Attrit Plot #\n\nhire_attrit_title <- md(glue(\"Data current as of {year(roster_max_pull_floor)}-{str_pad(month(roster_max_pull_floor),2, pad = 0)}-{str_pad(day(pull_date),2, pad = 0)}\"))\n\n# phire_attrit <- join_hire_attrit %>% \n#   rename(year_month = hire_ym) %>% \n#   mutate(net_gain = hire_count-end_count) %>% \n#   ggplot(aes(text = glue(\"Hired: {hire_count}\")))+\n#   geom_line(aes(x = year_month, y = hire_count), group = \"hire_count\", color = \"#33FF7B\")+\n#   geom_line(aes(x = year_month, y = end_count), group = \"end_count\", color = \"#FF7B33\")+\n#   geom_point(aes(x = year_month, y = hire_count), size = 3, color = \"steelblue\", alpha = 0.8)+\n#   geom_point(aes(x = year_month, y = end_count), size = 3, color = \"steelblue\", alpha = 0.8)+\n#   geom_text(aes(x = year_month, y = end_count,\n#                 label = end_count,\n#                 vjust = 3))+\n#     geom_text(aes(x = year_month, y = hire_count,\n#                 label = hire_count,\n#                 vjust = -1.5))+\n#   scale_y_continuous(limits = c(0,125), n.breaks = 6)+\n#   theme_bw()+\n#   labs(x = NULL,\n#        y = \"Count\")+\n#   ggtitle(\"NJASAP HIRING & ATTRITION\",\n#           subtitle = glue(\"*Data current as of {year(roster_max_pull_floor)}-{str_pad(month(roster_max_pull_floor),2, pad = 0)}-{str_pad(day(pull_date),2, pad = 0)}*\")\n#             )+\n#   theme(plot.subtitle = element_markdown(),\n#         axis.text.x = element_text(angle = 45, hjust = 1)\n#         )\n\n# ggplotly(phire_attrit, tooltip = \"text\") %>% \n#   layout(title = list(text = paste0('NJASAP HIRING & ATTRITION',\n#                                     '<br>',\n#                                     '<sup>',\n#                                      hire_attrit_title,'</sup>')))\n\njoin_hire_attrit %>% \n  rename(year_month = hire_ym) %>% \n  mutate(net_gain = hire_count-end_count) %>% \n  plot_ly(x = ~year_month, y = ~hire_count, type = \"scatter\", mode = \"lines+markers\",\n          line = list(color = \"#33FF7B\"),\n          marker = list(color = \"steelblue\", size = 10, alpha = 0.8),\n          name = \"Hired\") %>% \n  add_trace(x = ~year_month, y = ~end_count, type = \"scatter\", mode = \"lines+markers\",\n            line = list(color = \"#FF7B33\"),\n            name = \"Attrited\") %>% \n  layout( xaxis = list(title = \"\", showline = TRUE, tickangle = -45),\n          yaxis = list(title = \"Count\", showline = TRUE),\n          title = list( text = paste0('NJASAP HIRING & ATTRITION',\n                                    '<br>',\n                                    '<sup><i>',\n                                     hire_attrit_title,'</sup></i>'),\n                        x = 0.1, y = 0.95)\n          )\n\n```\n\n# Fleet Stats\n\n```{r}\n#| label: fleet-values\n#| results: hide\n#| message: false\n\n\n### ESPN Theme ###\n\ngt_theme_espn <- function(data, ...){\n  data %>% \n    opt_all_caps()  %>%\n    opt_table_font(\n      font = list(\n        google_font(\"Lato\"),\n        default_fonts()\n      )\n    )  %>% \n    opt_row_striping() %>% \n    tab_options(\n      row.striping.background_color = \"#BFCDDF\",\n      table_body.hlines.color = \"#f6f7f7\",\n      source_notes.font.size = 12,\n      table.font.size = 16,\n      #table.width = px(700),\n      heading.align = \"left\",\n      heading.title.font.size = 24,\n      table.border.top.color = \"transparent\",\n      table.border.top.width = px(3),\n      data_row.padding = px(7),\n      ...\n    ) \n}\n\n### Fleet Ratios ###\n\ntfleet_ratio <- seniority %>%\n  filter(published > max_pub_floor) %>% \n  select(aircraft, seat) %>% \n  filter(! aircraft %in% c(\"G-V\", \"BE-400A\", \"CE-560\", \"HS-125-800XPC\")) %>% \n  group_by(aircraft, seat) %>% \n  drop_na() %>% \n  count() %>% \n  pivot_wider(names_from = seat, values_from = n) %>% \n  mutate(total = PIC + SIC, pct_PIC = PIC/total, pct_SIC = 1-pct_PIC) %>% \n  arrange(desc(PIC)) %>% \n  ungroup()\n\ntfleet_ratio_global <- seniority %>%\n  filter(published > max_pub_floor) %>% \n  select(seat) %>% \n  count(seat) %>% \n  pivot_wider(names_from = seat, values_from = n) %>% \n  mutate(total = PIC + SIC, pct_PIC = PIC/total, pct_SIC = 1-pct_PIC)\n\n\n```\n\n```{r}\n#| title: \"Fleet Ratio\"\n\ntfleet_ratio %>% \n  datatable(\n    colnames = c(\"Fleet\" = 1, \"Total\" = 4, \"% PIC\" = 5, \"% SIC\" = 6),\n    options = list(autoWidth = T),\n    rownames = F\n  ) %>% \n  formatPercentage(5:6,1)\n```\n\n```{r}\n#| title: \"PIC to SIC Ratio §5.7(C)\"\n\ntfleet_ratio_global %>% \n  datatable(\n    colnames = c(\"Total\" = 3, \"% PIC\" = 4, \"% SIC\" = 5),\n    options = list(autoWidth = T, searching = FALSE, lengthChange = FALSE,\n                   paging = FALSE),\n    rownames = F\n  ) %>% \n  formatPercentage(4:5) %>% \n  formatCurrency(columns = 1:3, currency = \"\", mark = \",\", digits = 0 )\n```\n\n# Duty Summary\n\n## row {.tabset}\n\n### Duty Summary 12-Month\n\n```{r}\n#| title: \"Duty Day Summary 12-Months\"\n\ntable_79p_join_dsr %>% \n  datatable(\n    colnames = c(\"Name\", \"Senioirty\", \"Fleet\", \"Schedule\", \"Seat\", \"VED\", \"VAWD\", \"Total\", \"Plan Intl\", \"X\"),\n    rownames = F,\n    filter = \"top\",\n    options = list(\n     # paging = TRUE,\n     # pageLength = 25,\n      autoWidth = TRUE,\n  #    scrollY=\"100vh\",\n      scrollCollapse = FALSE\n    ),\n    caption = htmltools::tags$caption(\n      style = 'caption-side: top; text-align: left;',\n      'Period from ', htmltools::em(glue(\"{dsr_min_year}-{dsr_min_month}\")),' to ',htmltools::em(glue(\"{dsr_max_year}-{dsr_max_month}\"))\n      )\n  )\n```\n\n### Dut Summary YTD\n\n```{r}\n#| title: \"Duty Day Summary YTD\"\n\ntable_79p_join_ytd_dsr %>% \n  datatable(\n    colnames = c(\"Name\", \"Senioirty\", \"Fleet\", \"Schedule\", \"Seat\", \"VED\", \"VAWD\", \"Total\", \"Plan Intl\", \"X\"),\n    rownames = F,\n    filter = \"top\",\n    options = list(\n     # paging = TRUE,\n     # pageLength = 25,\n      autoWidth = TRUE,\n #     scrollY=\"100vh\",\n      scrollCollapse = FALSE\n    ),\n    caption = htmltools::tags$caption(\n      style = 'caption-side: top; text-align: left;',\n      'Period from ', htmltools::em(glue(\"{dsr_min_year}-{dsr_min_month}\")),' to ',htmltools::em(glue(\"{dsr_max_year}-{dsr_max_month}\"))\n      )\n  )\n```\n\n# Schedules (Mobile) {scrolling=\"true\"}\n\n## row {.tabset}\n\n### 7&7\n\n#### column {.tabset}\n\n##### 2024 7&7 Line 2\n![](images/2024_prod/7_7_Line_2.png)\n\n##### 3\n![](images/2024_prod/7_7_Line_3.png)\n\n##### 4\n![](images/2024_prod/7_7_Line_4.png)\n\n##### 5\n![](images/2024_prod/7_7_Line_5.png)\n\n##### 6\n![](images/2024_prod/7_7_Line_6.png)\n\n##### 7\n![](images/2024_prod/7_7_Line_7.png)\n\n##### 9\n![](images/2024_prod/7_7_Line_9.png)\n\n##### 10\n![](images/2024_prod/7_7_Line_10.png)\n\n##### 11\n![](images/2024_prod/7_7_Line_11.png)\n\n##### 12\n![](images/2024_prod/7_7_Line_12.png)\n\n##### 13\n![](images/2024_prod/7_7_Line_13.png)\n\n##### 14\n![](images/2024_prod/7_7_Line_14.png)\n\n\n\n#### column {.tabset}\n\n##### 2025 7&7 Line 2\n![](images/2025_prod/7_7_Line_2.png)\n\n##### 3\n![](images/2025_prod/7_7_Line_3.png)\n\n##### 4\n![](images/2025_prod/7_7_Line_4.png)\n\n##### 5\n![](images/2025_prod/7_7_Line_5.png)\n\n##### 6\n![](images/2025_prod/7_7_Line_6.png)\n\n##### 7\n![](images/2025_prod/7_7_Line_7.png)\n\n##### 9\n![](images/2025_prod/7_7_Line_9.png)\n\n##### 10\n![](images/2025_prod/7_7_Line_10.png)\n\n##### 11\n![](images/2025_prod/7_7_Line_11.png)\n\n##### 12\n![](images/2025_prod/7_7_Line_12.png)\n\n##### 13\n![](images/2025_prod/7_7_Line_13.png)\n\n##### 14\n![](images/2025_prod/7_7_Line_14.png)\n\n### 8&6\n\n#### column {.tabset}\n\n##### 2024 8&6 Line 2\n![](images/2024_prod/8_6_Line_2.png)\n\n##### 4\n![](images/2024_prod/8_6_Line_4.png)\n\n##### 6\n![](images/2024_prod/8_6_Line_6.png)\n\n##### 9\n![](images/2024_prod/8_6_Line_9.png)\n\n##### 11\n![](images/2024_prod/8_6_Line_11.png)\n\n##### 13\n![](images/2024_prod/8_6_Line_13.png)\n\n#### column {.tabset}\n\n##### 2025 8&6 Line 2\n![](images/2025_prod/8_6_Line_2.png)\n\n##### 4\n![](images/2025_prod/8_6_Line_4.png)\n\n##### 6\n![](images/2025_prod/8_6_Line_6.png)\n\n##### 9\n![](images/2025_prod/8_6_Line_9.png)\n\n##### 11\n![](images/2025_prod/8_6_Line_11.png)\n\n##### 13\n![](images/2025_prod/8_6_Line_13.png)\n\n\n# HBA Map\n\n```{r}\n#| label: load-HBA-data\n#| message: false\n\n# Import current HBA list\n\nthba_import <- dir(path = \"~/Library/CloudStorage/OneDrive-NJASAP/Documents/_NJASAP General/HBA Quarterly LIst\",\n                   full.names = T,\n                   pattern = \"active.*\\\\.xlsx$\")\n\nthba <- read_excel(thba_import,\n                   sheet = \"Sheet1\",\n                   range = cell_cols(9:10)\n)\n\n# Import, bind, and clean seniority\n\nimported_folder_2024 <- dir(path = \"~/OneDrive - NJASAP/Documents/Seniority Related/Seniority List - Union/2024\", \n                            full.names = T,\n                            pattern = \"\\\\d\\\\d\\\\d[34]-\\\\d\\\\d\\\\sSeniorityList_UnionCopy.xlsx\"\n)\n\nread_snrty_files <- function(file){\n  if(is.na(file)) stop(\"no file path\")\n  imported_snrty <- read_excel(file,\n                               sheet = \"UNION_EXCEL_FILE\",\n                               range = cell_cols(\"A:P\")\n  )\n  imported_snrty\n}\n\nthba_seniority_bind <- map_dfr(.x = imported_folder_2024, .f = read_snrty_files)\n\nthba_seniority <- thba_seniority_bind %>% \n  rename_all(tolower) %>% \n  select(cmi, co_snrty = `company seniority`, snrty = `union seniority`, 4:7,\n         equip_lock = `equip lock`, 9:12, tsp_elect = `tsp election`,\n         year_month = `year month`, published) %>% \n  mutate(doh = ymd(doh), equip_lock = ymd(equip_lock), published = ymd(published),\n         yos_r = ceiling( as.duration(doh %--% published) / dyears(1) )\n  )\n\nthba_month_floor <- floor_date(max(thba_seniority$published), unit = \"months\")\n\n# Create pilots per base table\n\nthba_ppb <- thba_seniority %>% \n  filter(published > thba_month_floor) %>% \n  rename(hba = gateway) %>% \n  mutate(hba = paste0(\"K\",hba), iata = str_sub(hba, -3, -1)) %>% \n  count(hba, name = \"ppb\", sort = TRUE)\n\n# Prep HBA table\n\nthba <- thba %>% \n  rename_all(tolower) %>% \n  mutate(iata = str_sub(hba, -3, -1))\n\n# Join HBA and PPB tables\n\nthba_map <- thba %>% \n  left_join(thba_ppb, by = \"hba\") %>% \n  left_join(airports, by = join_by(\"hba\" == \"ICAO\")) %>% \n  mutate(popup = paste0(hba, \"<br>\", Name, \"<br>\", \"Total Pilots: \", ppb),\n         status_color = case_when(\n           status == 1 ~\"blue\",\n           status == 2 ~\"orange\",\n           status == 3 ~\"red\",\n           TRUE ~\"green\"\n         )) %>% \n  select(hba, status, status_color , ppb, Name, City, Latitude, Longitude, popup)\n\n```\n\n```{r}\n#| label: print-hab-map\n\n# Draw the map\n# US Center 39.8283° N, 98.5795° W\n\nicons <- awesomeIcons(markerColor = thba_map$status_color)\n\nphba_map <- thba_map %>% \n  leaflet() %>%\n  addTiles() %>% \n  setView(lng = -98.5795,\n          lat = 39.283,\n          zoom = 5) %>% \n  setMaxBounds(lng1 = -130.0,\n               lng2 = -61.95,\n               lat1 = 23.0,\n               lat2 = 51.0) %>% \n  addAwesomeMarkers(~Longitude, ~Latitude,\n                    icon = icons,\n                    popup = ~popup)\n\nphba_map\n\n```\n\n# SDP Awards {orientation=\"columns\" scrolling=\"true\"}\n\n```{r sdp awards}\n\n\n### New SDP Feb 2024 ###\n\nseniority %>% \n  select(cmi,name, aircraft, sdp, published) %>% \n  pivot_wider(names_from = published, values_from = sdp) %>% \n  mutate(new_sdp = ifelse( is.na(`2024-01-15`) & !is.na(`2024-02-15`), 1, 0)\n         )%>% \n  filter(new_sdp == 1) %>% \n  select(name, aircraft, \"2024-01-15\", \"2024-02-15\") %>% \n  gt(rowname_col = \"name\", groupname_col = \"aircraft\") %>% \n  tab_header(title = md(\"February SDP Awards\")) %>% \n  tab_style(\n    style = cell_text(align = \"left\"),\n    locations = cells_title(\"title\")\n  ) %>% \n    cols_label(\n    \"2024-01-15\" = md(\"*2024-01*\"),\n    \"2024-02-15\" = md(\"*2024-02*\")\n  ) %>% \n    cols_width(\n    starts_with(\"2024\") ~px(100),\n    everything() ~px(200)\n  ) %>% \n    sub_missing(\n    columns = everything(),\n    rows = everything(),\n    missing_text = \"--\"\n  ) %>% \n  cols_align(\n    align = \"right\",\n    columns = \"name\"\n  ) %>%\n    cols_align(\n    align = \"right\",\n    columns = 3:4\n  ) %>%\n  gt_theme_538 %>% \n  tab_options(#heading.background.color = \"#cce6ff\",\n              heading.border.bottom.style = \"solid\")\n\n\n  # tab_style(\n  #   style = cell_fill(\"lightgray\"),\n  #   locations = cells_row_groups()\n  # ) %>% \n  # cols_align(\n  #   align = \"right\",\n  #   columns = \"name\"\n  # ) %>% \n  # cols_align(\n  #   align = \"center\",\n  #   columns = starts_with(\"2024\")\n  # )\n```\n\n```{r}\n\n### New SDP March 2024 ###\n\nseniority %>% \n  select(cmi,name, aircraft, sdp, published) %>% \n  pivot_wider(names_from = published, values_from = sdp) %>% \n  mutate(new_sdp = ifelse( is.na(`2024-02-15`) & !is.na(`2024-03-19`), 1, 0)\n  )%>% \n  filter(new_sdp == 1) %>% \n  select(name, aircraft, \"2024-02-15\", \"2024-03-19\") %>% \n  gt(rowname_col = \"name\", groupname_col = \"aircraft\") %>% \n  tab_header(title = md(\"March SDP Awards\")) %>% \n  tab_style(\n    style = cell_text(align = \"left\"),\n    locations = cells_title(\"title\")\n  ) %>% \n  cols_label(\n    \"2024-02-15\" = md(\"*2024-02*\"),\n    \"2024-03-19\" = md(\"*2024-03*\")\n  ) %>% \n    cols_width(\n    starts_with(\"2024\") ~px(100),\n    everything() ~px(200)\n  ) %>% \n    sub_missing(\n    columns = everything(),\n    rows = everything(),\n    missing_text = \"--\"\n  ) %>% \n  cols_align(\n    align = \"right\",\n    columns = \"name\"\n  ) %>%\n    cols_align(\n    align = \"right\",\n    columns = 3:4\n  ) %>%\n  gt_theme_538 %>% \n  tab_options(#heading.background.color = \"#cce6ff\",\n              heading.border.bottom.style = \"solid\")\n```\n\n```{r}\n\n### New SDP April 2024 ###\n\nseniority %>% \n  select(cmi,name, aircraft, sdp, published) %>% \n  pivot_wider(names_from = published, values_from = sdp) %>% \n  mutate(new_sdp = ifelse( is.na(`2024-03-19`) & !is.na(`2024-04-15`), 1, 0)\n  )%>% \n  filter(new_sdp == 1) %>% \n  select(name, aircraft, \"2024-03-19\", \"2024-04-15\") %>% \n  gt(rowname_col = \"name\", groupname_col = \"aircraft\") %>% \n  tab_header(title = md(\"April SDP Awards\")) %>% \n  tab_style(\n    style = cell_text(align = \"left\"),\n    locations = cells_title(\"title\")\n  ) %>% \n  cols_label(\n    \"2024-03-19\" = md(\"*2024-03*\"),\n    \"2024-04-15\" = md(\"*2024-04*\"),\n  ) %>% \n    cols_width(\n    starts_with(\"2024\") ~px(100),\n    everything() ~px(200)\n  ) %>% \n    sub_missing(\n    columns = everything(),\n    rows = everything(),\n    missing_text = \"--\"\n  ) %>% \n  cols_align(\n    align = \"right\",\n    columns = \"name\"\n  ) %>%\n    cols_align(\n    align = \"right\",\n    columns = 3:4\n  ) %>%\n  gt_theme_538 %>% \n  tab_options(#heading.background.color = \"#cce6ff\",\n              heading.border.bottom.style = \"solid\")\n```\n\n# Misc Holding\n\n```{r}\n#| title: \"Extended Day Summary\"\n\n\n### Year Month Summary 12-Month ###\n\ndsr_12_month_back <- max(clean_merged_dsr$date) %m+% months(-12)\ndsr_max_month <- month(max(clean_merged_dsr$date))\ndsr_max_year <- year(max(clean_merged_dsr$date))\n\nclean_merged_dsr %>% \n  filter(date > dsr_12_month_back) %>% \n  group_by(year_month, duty_code) %>%\n  count() %>% \n  pivot_wider(names_from = duty_code, values_from = n) %>% \n  mutate(total_extended = R + EXT) %>% \n  select(year_month, R, EXT, total_extended) %>% \n  ungroup() %>% \n  gt(rowname_col = \"year_month\") %>% \n  tab_header(title = md(\"NJASAP *Extended Day Summary*\"),\n             subtitle = md(glue(\"Period from *{year(dsr_12_month_back)}-0{month(dsr_12_month_back)+1}*\n                             to *{dsr_max_year}-0{dsr_max_month}*\")\n             )\n  ) %>% \n  gt_theme_espn() %>% \n  cols_label(\n    R = \"VAWD\",\n    total_extended = \"Total Extened\"\n  ) %>% \n  tab_options(\n    stub.font.size = \"16\"\n  ) %>% \n  fmt_number(everything(),\n             sep_mark = \",\",\n             decimals = 0)\n\n\n```\n","srcMarkdownNoYaml":"\n\n```{r}\n#| label: load-packages\n#| message: false\n\nlibrary(tidyverse)\nlibrary(ggtext)\nlibrary(readxl)\nlibrary(scales)\nlibrary(DT)\nlibrary(gt)\nlibrary(gtExtras)\nlibrary(glue)\nlibrary(plotly)\nlibrary(calendR)\nlibrary(cellranger)\nlibrary(airportr)\nlibrary(leaflet)\nlibrary(sf)\n# theme_set(theme_minimal(base_size = 24, base_family = \"Atkinson Hyperlegible\"))\n```\n\n```{r}\n#| label: load-and-prep-roster\n#| message: false\n\nroster_file <- dir(path = \"~/OneDrive - NJASAP/Documents/Contact List UnionWare Aptify\",\n                     full.names = T,\n                     pattern = \"ACTIVE.*\\\\.xlsx$\")\n\nroster <- read_excel(roster_file,\n                     sheet = \"Sheet1\",\n                     range = cell_cols(1:25)\n                     )\n\npull_date <- ymd(\"2024-05-27\")\n\nclean_roster <- roster %>%\n  rename_with(~tolower(gsub(\" \",\"_\", .x))) %>% \n  rename(employee_no = `employee_#`,\n         cmi = crew_member_id) %>% \n  mutate(hire_date = ymd(hire_date),\n         end_date = ymd(end_date),\n         birthday = ymd(birthday),\n         full_name = as.character(glue(\"{last_name}, {first_name}\")),\n         yos = ceiling(as.duration(hire_date %--% today()) / dyears(1)),\n         age = ceiling(as.duration(birthday %--% today()) / dyears(1)),\n         hire_ym = as.character(glue(\"{year(hire_date)}-{str_pad(month(hire_date),2,pad = '0')}\")),\n         end_ym = ifelse(is.na(end_date),NA,\n                          as.character(glue(\"{year(end_date)}-{str_pad(month(end_date),2,pad = '0')}\"))\n                          ),\n         end_year_yy = str_sub(end_ym, start = -5, end = -4),\n         hire_year_yy = str_sub(hire_ym, start = -5, end = -4),\n         pull_date = pull_date\n        )\n\n ### Required Dates ###\n\nroster_max_pull_floor <- floor_date(max(clean_roster$pull_date, na.rm = T), months(1))\n\nroster_12m_lb <- add_with_rollback(roster_max_pull_floor,\n                                   months(-11))\n\n### LIST OF MONTHS ###\n\nrun_total_months <- clean_roster %>% \n  select(hire_date) %>% \n  mutate(hire_floor = floor_date(hire_date, months(1))) %>% \n  select(hire_floor) %>% \n  filter(hire_floor >= roster_12m_lb) %>% \n  unique()\n\nrun_total_months <- as.list(run_total_months$hire_floor)\n\n### Total Pilots at Month ####\n\nfmonth_total <- function(x){\n\n  run_total <- clean_roster %>% \n    select(hire_date, end_date) %>% \n    mutate(month_run = as.character(x)) %>% \n    filter(hire_date < x & !is.na(hire_date)) %>% \n    filter(end_date >= x | is.na(end_date)) %>% \n    count(month_run)\n\n  return(run_total)\n}\n\n# fmonth_total(run_total_months[12])\n\n# as_date(19844)\n\n### Bind Total by Month ###\n\nmonthly_total <- map_dfr(.x = run_total_months, .f = fmonth_total)\n\nmonthly_total <- monthly_total %>% \n  mutate(month_run = ymd(month_run),\n         year_month = as.character(glue(\"{year(month_run)}-{str_pad(month(month_run),2, pad = 0)}\"))\n         )\n\n# glimpse(monthly_total)\n\n### Hire & Attrition Multi-Plot\n\nt_end_ym <- clean_roster %>%\n  select(cmi, full_name, hire_date, hire_ym, end_date, end_ym) %>% \n  filter(end_date >= roster_12m_lb ,!is.na(end_date)) %>% \n  count(end_ym, name = \"end_count\")\n\nt_hire_ym <- clean_roster %>%\n  select(cmi, full_name, hire_date, hire_ym, end_date, end_ym) %>% \n  filter(hire_date >= roster_12m_lb ,!is.na(hire_date)) %>% \n  count(hire_ym, name = \"hire_count\")\n\n# join_roster_hire_attrit #\n\njoin_hire_attrit <- t_hire_ym %>% \n  left_join(t_end_ym, by = join_by(hire_ym == end_ym))\n\n```\n\n```{r}\n#| label: load-and-prep-seniority\n#| message: false\n\nimported_folder_2023 <- dir(path = \"~/OneDrive - NJASAP/Documents/Seniority Related/Seniority List - Union/2023\", \n                            full.names = T,\n                            pattern = \"\\\\d\\\\d\\\\d[34]-\\\\d\\\\d\\\\sSeniorityList_UnionCopy.xlsx\"\n                            )\n\nimported_folder_2024 <- dir(path = \"~/OneDrive - NJASAP/Documents/Seniority Related/Seniority List - Union/2024\", \n                            full.names = T,\n                            pattern = \"\\\\d\\\\d\\\\d[34]-\\\\d\\\\d\\\\sSeniorityList_UnionCopy.xlsx\"\n                            )\n\nimported_master_snrty_folder <- c(imported_folder_2023, imported_folder_2024)\n\nrm(imported_folder_2023)\nrm(imported_folder_2024)\n\n### Create Function to build list of files ###\n\nread_snrty_files <- function(file){\n  if(is.na(file)) stop(\"no file path\")\n  imported_snrty <- read_excel(file,\n                               sheet = \"UNION_EXCEL_FILE\",\n                               range = cell_cols(\"A:P\")\n  )\n  imported_snrty\n}\n\n### Bind files by folder ###\n\nmerged_seniority <- map_dfr(.x = imported_master_snrty_folder, .f = read_snrty_files)\n\nrm(imported_master_snrty_folder)\n\nseniority <- merged_seniority %>% \n  rename_all(tolower) %>% \n  select(cmi, co_snrty = `company seniority`, snrty = `union seniority`, 4:7,\n         equip_lock = `equip lock`, 9:12, tsp_elect = `tsp election`,\n         year_month = `year month`, published) %>% \n  mutate(doh = ymd(doh), equip_lock = ymd(equip_lock), published = ymd(published),\n         yos_r = ceiling( as.duration(doh %--% published) / dyears(1) )\n         )\n\n### Date Variables ###\n\nmax_pub_floor <- floor_date(max(seniority$published), unit = \"months\")\n\nrm(merged_seniority)\n\n```\n\n```{r duty_summary}\n#| title: \"Duty Summary\"\n#| results: hide\n\n### Import and merge DSR lists ###\n\nimp_folder_dsr <- dir(\"~/OneDrive - NJASAP/Documents/Duty Status Reports DSR/Power Query Method TEST/DSR Montly RAW\",\n                             full.names = T,\n                             pattern = \"\\\\d\\\\d\\\\d[34]-\\\\d+\\\\sPilot Duty Summary.*\\\\.xlsx\")\n\n### Create Function to build list of files ###\n\nread_dsr_files <- function(file){\n  if(is.na(file)) stop(\"no file path\")\n  imported_dsr <- read_excel(file,\n                               sheet = \"Pilot Duty Report\",\n                               range = cell_cols(1:13)\n  )\n  imported_dsr\n}\n\n### Bind files by folder ###\n\nmerged_dsr <- map_dfr(.x = imp_folder_dsr, .f = read_dsr_files)\n\n### DSR Clean-up ###\n\nclean_merged_dsr <- merged_dsr %>% \n  rename_all(tolower) %>% \n  select(1:2, sen_status = `sen status`, 4:6, schedule = `sched type`, duty_code = `duty code`,\n         rest, duty_time = `duty time`, end_loc = `end loc`, icao_reg = `icao region`, country) %>% \n  mutate(date = ymd(date),\n         rest = ifelse(rest == \"24+\", \"25\", rest),\n         rest = as.numeric(rest),\n         duty_code = ifelse(duty_code == \"*\", \"EXT\", duty_code),\n         duty_prime = ifelse(duty_code == \"EXT\",\n                             duty_code,\n                             str_sub(duty_code,1,1)),\n         year = year(date),\n         month = str_pad(month(date),2,pad = \"0\"),\n         year_month = glue(\"{year}-{month}\")\n  )\n\n### Required Dates ###\n\ndsr_12m_lbk <- add_with_rollback(floor_date(max(clean_merged_dsr$date), months(1)),\n                                 months(-11),\n                                 roll_to_first = TRUE)\ndsr_min_month <- str_pad(month(dsr_12m_lbk),2, pad = \"0\")\ndsr_min_year <- year(dsr_12m_lbk)\ndsr_max_month <- str_pad(month(max(clean_merged_dsr$date)),2,pad = \"0\")\ndsr_max_year <- year(max(clean_merged_dsr$date))\ndsr_ytd_jan <- floor_date(max(clean_merged_dsr$date), years(1))\n\n### Table Prep -- Seniority List ###\n\n### Filtered for latest seniority list ###\n\nlatest_snrty_list <- seniority %>% \n  filter( published > max_pub_floor)\n\n##############################\n### DSR Prep for 12-Months ###\n##############################\n\npivot_duty_prime <- clean_merged_dsr %>% \n  select(cmi, date, duty_prime) %>% \n  filter(date >= dsr_12m_lbk) %>% \n  count(cmi, duty_prime) %>%\n  # count() %>% \n  pivot_wider(names_from = duty_prime, values_from = n) %>% \n  mutate(ttl_ext_days = case_when(is.na(EXT) & is.na(R) ~ EXT,\n                                  !is.na(EXT) & is.na(R) ~ EXT,\n                                  is.na(EXT) & !is.na(R) ~ R,\n                                  TRUE ~ EXT + R)\n         )%>% \n  select(cmi, EXT, R, ttl_ext_days, X)\n\npivot_duty_code <- clean_merged_dsr %>% \n  select(cmi, date, duty_code) %>% \n  filter(date >= dsr_12m_lbk) %>% \n  group_by(cmi, duty_code) %>%\n  count() %>% \n  pivot_wider(names_from = duty_code, values_from = n) %>% \n  select(cmi, X2)\n  \n### Join Duty Code and Duty Prime ###\n\njoin_duty_code <- pivot_duty_code %>% \n  left_join(pivot_duty_prime, by = \"cmi\") %>% \n  select(cmi, EXT, R, ttl_ext_days, X, X2) # Codes to display\n\n### Join Latest DSR and Seniority ###\n\njoin_latest_dsr_snrty <- latest_snrty_list %>% \n  left_join(join_duty_code, by = \"cmi\")\n\nrm(pivot_duty_code)\nrm(pivot_duty_prime)\nrm(join_duty_code)\n\n### Extended Day 79 Pockets Table 12-Months ###\n\ntable_79p_join_dsr <- join_latest_dsr_snrty %>%\n  mutate(sdp = ifelse(is.na(sdp), \"\", glue(\"({sdp})\")),\n         name_sdp = as.character(glue(\"{name} {sdp}\")),\n       #  name_sdp = as.character(name_sdp)\n         ) %>% \n  select(name_sdp, snrty, aircraft, schedule, seat, EXT, R, ttl_ext_days, X2, X) %>% \n  arrange(snrty)\n\n### Replace NA with 0 ###\n\ntable_79p_join_dsr[6:10][is.na(table_79p_join_dsr[6:10])] <- 0\n\n#########################################\n### Extended Day 79 Pockets Table YTD ###\n#########################################\n\n### DSR Prep for  YTD ###\n\npivot_ytd_duty_prime <- clean_merged_dsr %>%\n  select(cmi, date, duty_prime) %>%\n  filter(date >= dsr_ytd_jan) %>%\n  group_by(cmi, duty_prime) %>%\n  count() %>%\n  pivot_wider(names_from = duty_prime, values_from = n) %>%\n   mutate(ttl_ext_days = case_when(is.na(EXT) & is.na(R) ~ EXT,\n                                  !is.na(EXT) & is.na(R) ~ EXT,\n                                  is.na(EXT) & !is.na(R) ~ R,\n                                  TRUE ~ EXT + R)\n         )%>% \n  select(cmi, EXT, R, ttl_ext_days, X)\n\npivot_ytd_duty_code <- clean_merged_dsr %>%\n  select(cmi, date, duty_code) %>%\n  filter(date >= dsr_ytd_jan) %>%\n  group_by(cmi, duty_code) %>%\n  count() %>%\n  pivot_wider(names_from = duty_code, values_from = n) %>%\n  select(cmi, X2)\n\n### Join Duty Code and Duty Prime ###\n\njoin_ytd_duty_code <- pivot_ytd_duty_code %>%\n  left_join(pivot_ytd_duty_prime, by = \"cmi\") %>%\n  select(cmi, EXT, R, ttl_ext_days, X, X2) # Codes to display\n\n### Join Latest DSR and Seniority ###\n\njoin_latest_ytd_dsr_snrty <- latest_snrty_list %>%\n  left_join(join_ytd_duty_code, by = \"cmi\")\n\n### Resource Cleanup ###\n\nrm(latest_snrty_list)\nrm(pivot_ytd_duty_code)\nrm(pivot_ytd_duty_prime)\nrm(join_ytd_duty_code)\n\ntable_79p_join_ytd_dsr <- join_latest_ytd_dsr_snrty %>%\n  mutate(sdp = ifelse(is.na(sdp), \"\", glue(\"({sdp})\")),\n         name_sdp = as.character(glue(\"{name} {sdp}\")),\n       #  name_sdp = as.character(name_sdp)\n         ) %>%\n  select(name_sdp, snrty, aircraft, schedule, seat, EXT, R, ttl_ext_days, X2, X) %>% \n  arrange(snrty)\n\n### Replace NA with 0 ###\n\ntable_79p_join_ytd_dsr[6:10][is.na(table_79p_join_ytd_dsr[6:10])] <- 0\n   \n\n```\n\n# Home\n\n```{r}\n#| label: all-values\n#| results: hide\n\nn_pilots <- clean_roster %>% \n  filter(job_status != \"Attritted\" & job_status != \"Transfered\") %>% \n  nrow()\n\np_pic <- clean_roster %>% \n  filter(job_status != \"Attritted\" & job_status != \"Transfered\") %>% \n  count(seat) %>% \n  mutate(p = n / sum(n)) %>% \n  filter(seat == \"Pilot In Command\") %>% \n  pull(p)\n\np_sic <- clean_roster %>% \n  filter(job_status != \"Attritted\" & job_status != \"Transfered\") %>% \n  count(seat) %>% \n  mutate(p = n / sum(n)) %>% \n  filter(seat == \"Second In Command\") %>% \n  pull(p)\n```\n\n## Row {height=10%}\n\n```{r}\n#| content: valuebox\n#| title: \"Total Pilots\"\n\nlist(\n  icon = \"globe\",\n  color = \"primary\",\n  value = n_pilots\n)\n```\n\n```{r}\n#| content: valuebox\n#| title: \"Percent PIC\"\n\nlist(\n  icon = \"person-lines-fill\",\n  color = \"secondary\",\n  value = label_percent(accuracy = 0.1)(p_pic)\n)\n```\n\n```{r}\n#| content: valuebox\n#| title: \"Percent SIC\"\n\nlist(\n  icon = \"person-lines-fill\",\n  color = \"primary\",\n  value = label_percent(accuracy = 0.1)(p_sic)\n)\n```\n\n## Row {height=30%}\n\n```{r}\n#| title: \"Total Pilots\"\n\n\ntotal_pilots <- monthly_total %>% \n  ggplot(aes(x = month_run,\n             y = n,\n             text = glue(\"Year Month: {year_month}\\nTotal Pilots: {n}\")\n             )\n         ) +\n  geom_line(aes(group = \"year_month\"))+\n  geom_point(size = 3, color = \"#3b8ede\", alpha = 0.7)+\n  # geom_point(size = 6, shape = \"circle open\")+\n  theme_bw()+\n  labs(x = NULL,\n       y = \"Count\")+\n  theme(plot.subtitle = element_markdown(),\n        axis.text.x = element_text(angle = 45, hjust = 1)\n        )\n\nggplotly(total_pilots, tooltip = \"text\")\n```\n\n## Row {height=30%}\n\n```{r}\n#| title: \"New Hires\"\n\ntotal_hires <- join_hire_attrit %>% \n  rename(year_month = hire_ym) %>% \n  mutate(net_gain = hire_count-end_count) %>% \n  ggplot(aes(text = glue(\"Year Month: {year_month}\\nPilots Hired: {hire_count}\")))+\n  geom_line(aes(x = year_month, y = hire_count), group = \"hire_count\")+\n  geom_point(aes(x = year_month, y = hire_count), size = 3, color = \"steelblue\", alpha = 0.8)+\n  # geom_text(aes(x = year_month, y = hire_count,\n  #               label = hire_count,\n  #               vjust = -1.5))+\n  # scale_y_continuous(limits = c(0,125), n.breaks = 6)+\n  theme_bw()+\n  labs(x = NULL,\n       y = \"Count\")+\n  # ggtitle(\"NJASAP HIRING\",\n  #         subtitle = glue(\"*Data current as of {year(roster_max_pull_floor)}-{str_pad(month(roster_max_pull_floor),2, pad = 0)} NJASAP Pilot Seniority List*\")\n  #           )+\n  theme(plot.subtitle = element_markdown(),\n        axis.text.x = element_text(angle = 45, hjust = 1)\n        )\n\nggplotly(total_hires, tooltip = \"text\")\n```\n\n# Attrition {scrolling=\"false\"}\n\n```{r}\n#| label: hire attrition values\n#| results: hide\n\nn_attrit <- clean_roster %>%\n  select(cmi, full_name, hire_date, hire_ym, end_date, end_ym) %>% \n  filter(end_date >= roster_12m_lb ,!is.na(end_date)) %>% \n  count() %>% \n  pull(n)\n\nn_hire <- clean_roster %>%\n  select(cmi, full_name, hire_date, hire_ym, end_date, end_ym) %>% \n  filter(hire_date >= roster_12m_lb ,!is.na(hire_date)) %>% \n  count() %>% \n  pull(n)\n\nnet_staff <- n_hire-n_attrit\n\n```\n\n## row {height=\"10%\"}\n\n```{r}\n#| content: valuebox\n#| title: \"Total Hires\"\n\nlist(\n  icon = \"globe\",\n  color = \"primary\",\n  value = n_hire\n)\n```\n\n```{r}\n#| content: valuebox\n#| title: \"Total Attrition\"\n\nlist(\n  icon = \"person-lines-fill\",\n  color = \"secondary\",\n  value = n_attrit\n)\n```\n\n```{r}\n#| content: valuebox\n#| title: \"Net Staffing\"\n\nlist(\n  icon = \"person-lines-fill\",\n  color = \"primary\",\n  value = net_staff\n)\n```\n\n## row {height=\"70%\"}\n\n```{r}\n\n# Hire Attrit Plot #\n\nhire_attrit_title <- md(glue(\"Data current as of {year(roster_max_pull_floor)}-{str_pad(month(roster_max_pull_floor),2, pad = 0)}-{str_pad(day(pull_date),2, pad = 0)}\"))\n\n# phire_attrit <- join_hire_attrit %>% \n#   rename(year_month = hire_ym) %>% \n#   mutate(net_gain = hire_count-end_count) %>% \n#   ggplot(aes(text = glue(\"Hired: {hire_count}\")))+\n#   geom_line(aes(x = year_month, y = hire_count), group = \"hire_count\", color = \"#33FF7B\")+\n#   geom_line(aes(x = year_month, y = end_count), group = \"end_count\", color = \"#FF7B33\")+\n#   geom_point(aes(x = year_month, y = hire_count), size = 3, color = \"steelblue\", alpha = 0.8)+\n#   geom_point(aes(x = year_month, y = end_count), size = 3, color = \"steelblue\", alpha = 0.8)+\n#   geom_text(aes(x = year_month, y = end_count,\n#                 label = end_count,\n#                 vjust = 3))+\n#     geom_text(aes(x = year_month, y = hire_count,\n#                 label = hire_count,\n#                 vjust = -1.5))+\n#   scale_y_continuous(limits = c(0,125), n.breaks = 6)+\n#   theme_bw()+\n#   labs(x = NULL,\n#        y = \"Count\")+\n#   ggtitle(\"NJASAP HIRING & ATTRITION\",\n#           subtitle = glue(\"*Data current as of {year(roster_max_pull_floor)}-{str_pad(month(roster_max_pull_floor),2, pad = 0)}-{str_pad(day(pull_date),2, pad = 0)}*\")\n#             )+\n#   theme(plot.subtitle = element_markdown(),\n#         axis.text.x = element_text(angle = 45, hjust = 1)\n#         )\n\n# ggplotly(phire_attrit, tooltip = \"text\") %>% \n#   layout(title = list(text = paste0('NJASAP HIRING & ATTRITION',\n#                                     '<br>',\n#                                     '<sup>',\n#                                      hire_attrit_title,'</sup>')))\n\njoin_hire_attrit %>% \n  rename(year_month = hire_ym) %>% \n  mutate(net_gain = hire_count-end_count) %>% \n  plot_ly(x = ~year_month, y = ~hire_count, type = \"scatter\", mode = \"lines+markers\",\n          line = list(color = \"#33FF7B\"),\n          marker = list(color = \"steelblue\", size = 10, alpha = 0.8),\n          name = \"Hired\") %>% \n  add_trace(x = ~year_month, y = ~end_count, type = \"scatter\", mode = \"lines+markers\",\n            line = list(color = \"#FF7B33\"),\n            name = \"Attrited\") %>% \n  layout( xaxis = list(title = \"\", showline = TRUE, tickangle = -45),\n          yaxis = list(title = \"Count\", showline = TRUE),\n          title = list( text = paste0('NJASAP HIRING & ATTRITION',\n                                    '<br>',\n                                    '<sup><i>',\n                                     hire_attrit_title,'</sup></i>'),\n                        x = 0.1, y = 0.95)\n          )\n\n```\n\n# Fleet Stats\n\n```{r}\n#| label: fleet-values\n#| results: hide\n#| message: false\n\n\n### ESPN Theme ###\n\ngt_theme_espn <- function(data, ...){\n  data %>% \n    opt_all_caps()  %>%\n    opt_table_font(\n      font = list(\n        google_font(\"Lato\"),\n        default_fonts()\n      )\n    )  %>% \n    opt_row_striping() %>% \n    tab_options(\n      row.striping.background_color = \"#BFCDDF\",\n      table_body.hlines.color = \"#f6f7f7\",\n      source_notes.font.size = 12,\n      table.font.size = 16,\n      #table.width = px(700),\n      heading.align = \"left\",\n      heading.title.font.size = 24,\n      table.border.top.color = \"transparent\",\n      table.border.top.width = px(3),\n      data_row.padding = px(7),\n      ...\n    ) \n}\n\n### Fleet Ratios ###\n\ntfleet_ratio <- seniority %>%\n  filter(published > max_pub_floor) %>% \n  select(aircraft, seat) %>% \n  filter(! aircraft %in% c(\"G-V\", \"BE-400A\", \"CE-560\", \"HS-125-800XPC\")) %>% \n  group_by(aircraft, seat) %>% \n  drop_na() %>% \n  count() %>% \n  pivot_wider(names_from = seat, values_from = n) %>% \n  mutate(total = PIC + SIC, pct_PIC = PIC/total, pct_SIC = 1-pct_PIC) %>% \n  arrange(desc(PIC)) %>% \n  ungroup()\n\ntfleet_ratio_global <- seniority %>%\n  filter(published > max_pub_floor) %>% \n  select(seat) %>% \n  count(seat) %>% \n  pivot_wider(names_from = seat, values_from = n) %>% \n  mutate(total = PIC + SIC, pct_PIC = PIC/total, pct_SIC = 1-pct_PIC)\n\n\n```\n\n```{r}\n#| title: \"Fleet Ratio\"\n\ntfleet_ratio %>% \n  datatable(\n    colnames = c(\"Fleet\" = 1, \"Total\" = 4, \"% PIC\" = 5, \"% SIC\" = 6),\n    options = list(autoWidth = T),\n    rownames = F\n  ) %>% \n  formatPercentage(5:6,1)\n```\n\n```{r}\n#| title: \"PIC to SIC Ratio §5.7(C)\"\n\ntfleet_ratio_global %>% \n  datatable(\n    colnames = c(\"Total\" = 3, \"% PIC\" = 4, \"% SIC\" = 5),\n    options = list(autoWidth = T, searching = FALSE, lengthChange = FALSE,\n                   paging = FALSE),\n    rownames = F\n  ) %>% \n  formatPercentage(4:5) %>% \n  formatCurrency(columns = 1:3, currency = \"\", mark = \",\", digits = 0 )\n```\n\n# Duty Summary\n\n## row {.tabset}\n\n### Duty Summary 12-Month\n\n```{r}\n#| title: \"Duty Day Summary 12-Months\"\n\ntable_79p_join_dsr %>% \n  datatable(\n    colnames = c(\"Name\", \"Senioirty\", \"Fleet\", \"Schedule\", \"Seat\", \"VED\", \"VAWD\", \"Total\", \"Plan Intl\", \"X\"),\n    rownames = F,\n    filter = \"top\",\n    options = list(\n     # paging = TRUE,\n     # pageLength = 25,\n      autoWidth = TRUE,\n  #    scrollY=\"100vh\",\n      scrollCollapse = FALSE\n    ),\n    caption = htmltools::tags$caption(\n      style = 'caption-side: top; text-align: left;',\n      'Period from ', htmltools::em(glue(\"{dsr_min_year}-{dsr_min_month}\")),' to ',htmltools::em(glue(\"{dsr_max_year}-{dsr_max_month}\"))\n      )\n  )\n```\n\n### Dut Summary YTD\n\n```{r}\n#| title: \"Duty Day Summary YTD\"\n\ntable_79p_join_ytd_dsr %>% \n  datatable(\n    colnames = c(\"Name\", \"Senioirty\", \"Fleet\", \"Schedule\", \"Seat\", \"VED\", \"VAWD\", \"Total\", \"Plan Intl\", \"X\"),\n    rownames = F,\n    filter = \"top\",\n    options = list(\n     # paging = TRUE,\n     # pageLength = 25,\n      autoWidth = TRUE,\n #     scrollY=\"100vh\",\n      scrollCollapse = FALSE\n    ),\n    caption = htmltools::tags$caption(\n      style = 'caption-side: top; text-align: left;',\n      'Period from ', htmltools::em(glue(\"{dsr_min_year}-{dsr_min_month}\")),' to ',htmltools::em(glue(\"{dsr_max_year}-{dsr_max_month}\"))\n      )\n  )\n```\n\n# Schedules (Mobile) {scrolling=\"true\"}\n\n## row {.tabset}\n\n### 7&7\n\n#### column {.tabset}\n\n##### 2024 7&7 Line 2\n![](images/2024_prod/7_7_Line_2.png)\n\n##### 3\n![](images/2024_prod/7_7_Line_3.png)\n\n##### 4\n![](images/2024_prod/7_7_Line_4.png)\n\n##### 5\n![](images/2024_prod/7_7_Line_5.png)\n\n##### 6\n![](images/2024_prod/7_7_Line_6.png)\n\n##### 7\n![](images/2024_prod/7_7_Line_7.png)\n\n##### 9\n![](images/2024_prod/7_7_Line_9.png)\n\n##### 10\n![](images/2024_prod/7_7_Line_10.png)\n\n##### 11\n![](images/2024_prod/7_7_Line_11.png)\n\n##### 12\n![](images/2024_prod/7_7_Line_12.png)\n\n##### 13\n![](images/2024_prod/7_7_Line_13.png)\n\n##### 14\n![](images/2024_prod/7_7_Line_14.png)\n\n\n\n#### column {.tabset}\n\n##### 2025 7&7 Line 2\n![](images/2025_prod/7_7_Line_2.png)\n\n##### 3\n![](images/2025_prod/7_7_Line_3.png)\n\n##### 4\n![](images/2025_prod/7_7_Line_4.png)\n\n##### 5\n![](images/2025_prod/7_7_Line_5.png)\n\n##### 6\n![](images/2025_prod/7_7_Line_6.png)\n\n##### 7\n![](images/2025_prod/7_7_Line_7.png)\n\n##### 9\n![](images/2025_prod/7_7_Line_9.png)\n\n##### 10\n![](images/2025_prod/7_7_Line_10.png)\n\n##### 11\n![](images/2025_prod/7_7_Line_11.png)\n\n##### 12\n![](images/2025_prod/7_7_Line_12.png)\n\n##### 13\n![](images/2025_prod/7_7_Line_13.png)\n\n##### 14\n![](images/2025_prod/7_7_Line_14.png)\n\n### 8&6\n\n#### column {.tabset}\n\n##### 2024 8&6 Line 2\n![](images/2024_prod/8_6_Line_2.png)\n\n##### 4\n![](images/2024_prod/8_6_Line_4.png)\n\n##### 6\n![](images/2024_prod/8_6_Line_6.png)\n\n##### 9\n![](images/2024_prod/8_6_Line_9.png)\n\n##### 11\n![](images/2024_prod/8_6_Line_11.png)\n\n##### 13\n![](images/2024_prod/8_6_Line_13.png)\n\n#### column {.tabset}\n\n##### 2025 8&6 Line 2\n![](images/2025_prod/8_6_Line_2.png)\n\n##### 4\n![](images/2025_prod/8_6_Line_4.png)\n\n##### 6\n![](images/2025_prod/8_6_Line_6.png)\n\n##### 9\n![](images/2025_prod/8_6_Line_9.png)\n\n##### 11\n![](images/2025_prod/8_6_Line_11.png)\n\n##### 13\n![](images/2025_prod/8_6_Line_13.png)\n\n\n# HBA Map\n\n```{r}\n#| label: load-HBA-data\n#| message: false\n\n# Import current HBA list\n\nthba_import <- dir(path = \"~/Library/CloudStorage/OneDrive-NJASAP/Documents/_NJASAP General/HBA Quarterly LIst\",\n                   full.names = T,\n                   pattern = \"active.*\\\\.xlsx$\")\n\nthba <- read_excel(thba_import,\n                   sheet = \"Sheet1\",\n                   range = cell_cols(9:10)\n)\n\n# Import, bind, and clean seniority\n\nimported_folder_2024 <- dir(path = \"~/OneDrive - NJASAP/Documents/Seniority Related/Seniority List - Union/2024\", \n                            full.names = T,\n                            pattern = \"\\\\d\\\\d\\\\d[34]-\\\\d\\\\d\\\\sSeniorityList_UnionCopy.xlsx\"\n)\n\nread_snrty_files <- function(file){\n  if(is.na(file)) stop(\"no file path\")\n  imported_snrty <- read_excel(file,\n                               sheet = \"UNION_EXCEL_FILE\",\n                               range = cell_cols(\"A:P\")\n  )\n  imported_snrty\n}\n\nthba_seniority_bind <- map_dfr(.x = imported_folder_2024, .f = read_snrty_files)\n\nthba_seniority <- thba_seniority_bind %>% \n  rename_all(tolower) %>% \n  select(cmi, co_snrty = `company seniority`, snrty = `union seniority`, 4:7,\n         equip_lock = `equip lock`, 9:12, tsp_elect = `tsp election`,\n         year_month = `year month`, published) %>% \n  mutate(doh = ymd(doh), equip_lock = ymd(equip_lock), published = ymd(published),\n         yos_r = ceiling( as.duration(doh %--% published) / dyears(1) )\n  )\n\nthba_month_floor <- floor_date(max(thba_seniority$published), unit = \"months\")\n\n# Create pilots per base table\n\nthba_ppb <- thba_seniority %>% \n  filter(published > thba_month_floor) %>% \n  rename(hba = gateway) %>% \n  mutate(hba = paste0(\"K\",hba), iata = str_sub(hba, -3, -1)) %>% \n  count(hba, name = \"ppb\", sort = TRUE)\n\n# Prep HBA table\n\nthba <- thba %>% \n  rename_all(tolower) %>% \n  mutate(iata = str_sub(hba, -3, -1))\n\n# Join HBA and PPB tables\n\nthba_map <- thba %>% \n  left_join(thba_ppb, by = \"hba\") %>% \n  left_join(airports, by = join_by(\"hba\" == \"ICAO\")) %>% \n  mutate(popup = paste0(hba, \"<br>\", Name, \"<br>\", \"Total Pilots: \", ppb),\n         status_color = case_when(\n           status == 1 ~\"blue\",\n           status == 2 ~\"orange\",\n           status == 3 ~\"red\",\n           TRUE ~\"green\"\n         )) %>% \n  select(hba, status, status_color , ppb, Name, City, Latitude, Longitude, popup)\n\n```\n\n```{r}\n#| label: print-hab-map\n\n# Draw the map\n# US Center 39.8283° N, 98.5795° W\n\nicons <- awesomeIcons(markerColor = thba_map$status_color)\n\nphba_map <- thba_map %>% \n  leaflet() %>%\n  addTiles() %>% \n  setView(lng = -98.5795,\n          lat = 39.283,\n          zoom = 5) %>% \n  setMaxBounds(lng1 = -130.0,\n               lng2 = -61.95,\n               lat1 = 23.0,\n               lat2 = 51.0) %>% \n  addAwesomeMarkers(~Longitude, ~Latitude,\n                    icon = icons,\n                    popup = ~popup)\n\nphba_map\n\n```\n\n# SDP Awards {orientation=\"columns\" scrolling=\"true\"}\n\n```{r sdp awards}\n\n\n### New SDP Feb 2024 ###\n\nseniority %>% \n  select(cmi,name, aircraft, sdp, published) %>% \n  pivot_wider(names_from = published, values_from = sdp) %>% \n  mutate(new_sdp = ifelse( is.na(`2024-01-15`) & !is.na(`2024-02-15`), 1, 0)\n         )%>% \n  filter(new_sdp == 1) %>% \n  select(name, aircraft, \"2024-01-15\", \"2024-02-15\") %>% \n  gt(rowname_col = \"name\", groupname_col = \"aircraft\") %>% \n  tab_header(title = md(\"February SDP Awards\")) %>% \n  tab_style(\n    style = cell_text(align = \"left\"),\n    locations = cells_title(\"title\")\n  ) %>% \n    cols_label(\n    \"2024-01-15\" = md(\"*2024-01*\"),\n    \"2024-02-15\" = md(\"*2024-02*\")\n  ) %>% \n    cols_width(\n    starts_with(\"2024\") ~px(100),\n    everything() ~px(200)\n  ) %>% \n    sub_missing(\n    columns = everything(),\n    rows = everything(),\n    missing_text = \"--\"\n  ) %>% \n  cols_align(\n    align = \"right\",\n    columns = \"name\"\n  ) %>%\n    cols_align(\n    align = \"right\",\n    columns = 3:4\n  ) %>%\n  gt_theme_538 %>% \n  tab_options(#heading.background.color = \"#cce6ff\",\n              heading.border.bottom.style = \"solid\")\n\n\n  # tab_style(\n  #   style = cell_fill(\"lightgray\"),\n  #   locations = cells_row_groups()\n  # ) %>% \n  # cols_align(\n  #   align = \"right\",\n  #   columns = \"name\"\n  # ) %>% \n  # cols_align(\n  #   align = \"center\",\n  #   columns = starts_with(\"2024\")\n  # )\n```\n\n```{r}\n\n### New SDP March 2024 ###\n\nseniority %>% \n  select(cmi,name, aircraft, sdp, published) %>% \n  pivot_wider(names_from = published, values_from = sdp) %>% \n  mutate(new_sdp = ifelse( is.na(`2024-02-15`) & !is.na(`2024-03-19`), 1, 0)\n  )%>% \n  filter(new_sdp == 1) %>% \n  select(name, aircraft, \"2024-02-15\", \"2024-03-19\") %>% \n  gt(rowname_col = \"name\", groupname_col = \"aircraft\") %>% \n  tab_header(title = md(\"March SDP Awards\")) %>% \n  tab_style(\n    style = cell_text(align = \"left\"),\n    locations = cells_title(\"title\")\n  ) %>% \n  cols_label(\n    \"2024-02-15\" = md(\"*2024-02*\"),\n    \"2024-03-19\" = md(\"*2024-03*\")\n  ) %>% \n    cols_width(\n    starts_with(\"2024\") ~px(100),\n    everything() ~px(200)\n  ) %>% \n    sub_missing(\n    columns = everything(),\n    rows = everything(),\n    missing_text = \"--\"\n  ) %>% \n  cols_align(\n    align = \"right\",\n    columns = \"name\"\n  ) %>%\n    cols_align(\n    align = \"right\",\n    columns = 3:4\n  ) %>%\n  gt_theme_538 %>% \n  tab_options(#heading.background.color = \"#cce6ff\",\n              heading.border.bottom.style = \"solid\")\n```\n\n```{r}\n\n### New SDP April 2024 ###\n\nseniority %>% \n  select(cmi,name, aircraft, sdp, published) %>% \n  pivot_wider(names_from = published, values_from = sdp) %>% \n  mutate(new_sdp = ifelse( is.na(`2024-03-19`) & !is.na(`2024-04-15`), 1, 0)\n  )%>% \n  filter(new_sdp == 1) %>% \n  select(name, aircraft, \"2024-03-19\", \"2024-04-15\") %>% \n  gt(rowname_col = \"name\", groupname_col = \"aircraft\") %>% \n  tab_header(title = md(\"April SDP Awards\")) %>% \n  tab_style(\n    style = cell_text(align = \"left\"),\n    locations = cells_title(\"title\")\n  ) %>% \n  cols_label(\n    \"2024-03-19\" = md(\"*2024-03*\"),\n    \"2024-04-15\" = md(\"*2024-04*\"),\n  ) %>% \n    cols_width(\n    starts_with(\"2024\") ~px(100),\n    everything() ~px(200)\n  ) %>% \n    sub_missing(\n    columns = everything(),\n    rows = everything(),\n    missing_text = \"--\"\n  ) %>% \n  cols_align(\n    align = \"right\",\n    columns = \"name\"\n  ) %>%\n    cols_align(\n    align = \"right\",\n    columns = 3:4\n  ) %>%\n  gt_theme_538 %>% \n  tab_options(#heading.background.color = \"#cce6ff\",\n              heading.border.bottom.style = \"solid\")\n```\n\n# Misc Holding\n\n```{r}\n#| title: \"Extended Day Summary\"\n\n\n### Year Month Summary 12-Month ###\n\ndsr_12_month_back <- max(clean_merged_dsr$date) %m+% months(-12)\ndsr_max_month <- month(max(clean_merged_dsr$date))\ndsr_max_year <- year(max(clean_merged_dsr$date))\n\nclean_merged_dsr %>% \n  filter(date > dsr_12_month_back) %>% \n  group_by(year_month, duty_code) %>%\n  count() %>% \n  pivot_wider(names_from = duty_code, values_from = n) %>% \n  mutate(total_extended = R + EXT) %>% \n  select(year_month, R, EXT, total_extended) %>% \n  ungroup() %>% \n  gt(rowname_col = \"year_month\") %>% \n  tab_header(title = md(\"NJASAP *Extended Day Summary*\"),\n             subtitle = md(glue(\"Period from *{year(dsr_12_month_back)}-0{month(dsr_12_month_back)+1}*\n                             to *{dsr_max_year}-0{dsr_max_month}*\")\n             )\n  ) %>% \n  gt_theme_espn() %>% \n  cols_label(\n    R = \"VAWD\",\n    total_extended = \"Total Extened\"\n  ) %>% \n  tab_options(\n    stub.font.size = \"16\"\n  ) %>% \n  fmt_number(everything(),\n             sep_mark = \",\",\n             decimals = 0)\n\n\n```\n"},"formats":{"dashboard":{"identifier":{"display-name":"HTML","target-format":"dashboard","base-format":"dashboard"},"execute":{"fig-width":8,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":null,"freeze":false,"echo":false,"output":true,"warning":false,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"ipynb-shell-interactivity":"all","plotly-connected":false,"engine":"knitr"},"render":{"keep-tex":false,"keep-typ":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":"none","code-overflow":"scroll","code-link":false,"code-line-numbers":false,"code-tools":false,"tbl-colwidths":"auto","merge-includes":true,"inline-includes":false,"preserve-yaml":false,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-min-runs":1,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[],"notebook-links":true},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","output-file":"index.html"},"language":{"toc-title-document":"Table of contents","toc-title-website":"On this page","related-formats-title":"Other Formats","related-notebooks-title":"Notebooks","source-notebooks-prefix":"Source","other-links-title":"Other Links","code-links-title":"Code Links","launch-dev-container-title":"Launch Dev Container","launch-binder-title":"Launch Binder","article-notebook-label":"Article Notebook","notebook-preview-download":"Download Notebook","notebook-preview-download-src":"Download Source","notebook-preview-back":"Back to Article","manuscript-meca-bundle":"MECA Bundle","section-title-abstract":"Abstract","section-title-appendices":"Appendices","section-title-footnotes":"Footnotes","section-title-references":"References","section-title-reuse":"Reuse","section-title-copyright":"Copyright","section-title-citation":"Citation","appendix-attribution-cite-as":"For attribution, please cite this work as:","appendix-attribution-bibtex":"BibTeX citation:","title-block-author-single":"Author","title-block-author-plural":"Authors","title-block-affiliation-single":"Affiliation","title-block-affiliation-plural":"Affiliations","title-block-published":"Published","title-block-modified":"Modified","title-block-keywords":"Keywords","callout-tip-title":"Tip","callout-note-title":"Note","callout-warning-title":"Warning","callout-important-title":"Important","callout-caution-title":"Caution","code-summary":"Code","code-tools-menu-caption":"Code","code-tools-show-all-code":"Show All Code","code-tools-hide-all-code":"Hide All Code","code-tools-view-source":"View Source","code-tools-source-code":"Source Code","tools-share":"Share","tools-download":"Download","code-line":"Line","code-lines":"Lines","copy-button-tooltip":"Copy to Clipboard","copy-button-tooltip-success":"Copied!","repo-action-links-edit":"Edit this page","repo-action-links-source":"View source","repo-action-links-issue":"Report an issue","back-to-top":"Back to top","search-no-results-text":"No results","search-matching-documents-text":"matching documents","search-copy-link-title":"Copy link to search","search-hide-matches-text":"Hide additional matches","search-more-match-text":"more match in this document","search-more-matches-text":"more matches in this document","search-clear-button-title":"Clear","search-text-placeholder":"","search-detached-cancel-button-title":"Cancel","search-submit-button-title":"Submit","search-label":"Search","toggle-section":"Toggle section","toggle-sidebar":"Toggle sidebar navigation","toggle-dark-mode":"Toggle dark mode","toggle-reader-mode":"Toggle reader mode","toggle-navigation":"Toggle navigation","crossref-fig-title":"Figure","crossref-tbl-title":"Table","crossref-lst-title":"Listing","crossref-thm-title":"Theorem","crossref-lem-title":"Lemma","crossref-cor-title":"Corollary","crossref-prp-title":"Proposition","crossref-cnj-title":"Conjecture","crossref-def-title":"Definition","crossref-exm-title":"Example","crossref-exr-title":"Exercise","crossref-ch-prefix":"Chapter","crossref-apx-prefix":"Appendix","crossref-sec-prefix":"Section","crossref-eq-prefix":"Equation","crossref-lof-title":"List of Figures","crossref-lot-title":"List of Tables","crossref-lol-title":"List of Listings","environment-proof-title":"Proof","environment-remark-title":"Remark","environment-solution-title":"Solution","listing-page-order-by":"Order By","listing-page-order-by-default":"Default","listing-page-order-by-date-asc":"Oldest","listing-page-order-by-date-desc":"Newest","listing-page-order-by-number-desc":"High to Low","listing-page-order-by-number-asc":"Low to High","listing-page-field-date":"Date","listing-page-field-title":"Title","listing-page-field-description":"Description","listing-page-field-author":"Author","listing-page-field-filename":"File Name","listing-page-field-filemodified":"Modified","listing-page-field-subtitle":"Subtitle","listing-page-field-readingtime":"Reading Time","listing-page-field-wordcount":"Word Count","listing-page-field-categories":"Categories","listing-page-minutes-compact":"{0} min","listing-page-category-all":"All","listing-page-no-matches":"No matching items","listing-page-words":"{0} words"},"metadata":{"lang":"en","fig-responsive":true,"quarto-version":"1.4.553","page-layout":"custom","title":"dashboard_alpha","logo":"images/skype_icon.png","editor_options":{"chunk_output_type":"console"}},"extensions":{"book":{"multiFile":true}}}},"projectFormats":["html"]}